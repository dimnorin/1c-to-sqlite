Перем Connection;

Процедура ПодготовитьСтатистику() Экспорт 
	Connection = SQLiteInit();
	ЗаписатьВозврат(получитьПоследнююДатуВозвратаSQLite());
	ЗаписатьПоступление(получитьПоследнююДатуПоступленияSQLite());
	ЗаписатьКассу(получитьПоследнююДатуКассыSQLite());
	ЗаписатьПродажи(получитьПоследнююДатуПродажSQLite());

	ЗапуститьПриложение("javaw -jar D:\work\Test\test.jar");
КонецПроцедуры

///////// СЕКЦИЯ ВОЗВРАТ /////////
Процедура ЗаписатьВозврат(Начало) 
	конец = КонецДня(ТекущаяДата());
	выборка = Документы.ВозвратТоваровПоставщику.Выбрать(Начало,Конец);
	
	Пока выборка.Следующий() Цикл
		ЗаписатьВозвратSQLite(выборка.Дата, выборка.Номер, выборка.Ссылка, выборка.Комментарий, выборка.СуммаДокумента);
		Сообщить(выборка);
	КонецЦикла;
КонецПроцедуры

Процедура ЗаписатьВозвратSQLite(дата, номер, ссылка, комментарий, сумма)
	Попытка
		Command = Новый COMОбъект("ADODB.Command");
		Command.CommandTimeout = 100;
		Command.CommandText = "INSERT INTO outcome(date, number, ref, comment, sum) VALUES ("
		+ "'" + форматДаты(дата) +"',"
		+ номер +","
		+ "'" + ссылка +"',"
		+ "'" + комментарий +"',"
		+ форматСуммы(сумма) + ")"
		;
		Command.CommandType = 1;
		Command.ActiveConnection = Connection;
		Command.Execute();  
    Исключение
        Сообщить(ОписаниеОшибки());
    КонецПопытки;
КонецПроцедуры

Функция получитьПоследнююДатуВозвратаSQLite()
	Возврат получитьПоследнююДатуSQLite("SELECT date FROM outcome_last_update");		
КонецФункции

///////// СЕКЦИЯ ПОСТУПЛЕНИЕ /////////
Процедура ЗаписатьПоступление(Начало) 
	конец = КонецДня(ТекущаяДата());
	выборка = Документы.ПоступлениеТоваров.Выбрать(Начало,Конец);
	
	Пока выборка.Следующий() Цикл
		ЗаписатьПоступлениеSQLite(выборка.Дата, выборка.Номер, выборка.Ссылка, выборка.Комментарий, выборка.СуммаДокумента, выборка.ДатаВходящегоДокумента, выборка.НомерВходящегоДокумента);
		Сообщить(выборка);
	КонецЦикла;
КонецПроцедуры

Процедура ЗаписатьПоступлениеSQLite(дата, номер, ссылка, комментарий, сумма, датаВхДок, номерВхДок)
	Попытка
		Command = Новый COMОбъект("ADODB.Command");
		Command.CommandTimeout = 100;
		Command.CommandText = "INSERT INTO income(date, number, ref, comment, sum, date_in_doc, number_in_doc) VALUES ("
		+ "'" + форматДаты(дата) +"',"
		+ номер +","
		+ "'" + ссылка +"',"
		+ "'" + комментарий +"',"
		+ форматСуммы(сумма) +","
		+ "'" + датаВхДок +"',"
		+ "'" +номерВхДок +"'"
		+ ")"
		;
		Command.CommandType = 1;
		Command.ActiveConnection = Connection;
		Command.Execute();  
    Исключение
        Сообщить(ОписаниеОшибки());
    КонецПопытки;
КонецПроцедуры

Функция получитьПоследнююДатуПоступленияSQLite()
	Возврат получитьПоследнююДатуSQLite("SELECT date FROM income_last_update");		
КонецФункции

///////// СЕКЦИЯ КАССЫ /////////
Процедура ЗаписатьКассу(Начало) 
	конец = КонецДня(ТекущаяДата());
	выборка = РегистрыНакопления.ДенежныеСредства.Выбрать(Начало,Конец);
	
	Пока выборка.Следующий() Цикл
		ЗаписатьКассуSQLite(выборка.Касса, выборка.Период, выборка.ВидДвижения, выборка.Регистратор, выборка.Регистратор.Комментарий, выборка.Сумма);
		Сообщить(выборка);
	КонецЦикла;
КонецПроцедуры

Процедура ЗаписатьКассуSQLite(касса, дата, тип, основание, комментарий, сумма)
	Попытка
		Command = Новый COMОбъект("ADODB.Command");
		Command.CommandTimeout = 100;
		Command.CommandText = "INSERT INTO cash(cash, date, type, base, comment, sum) VALUES ("
		+ "'" + касса +"',"
		+ "'" + форматДаты(дата) +"',"
		+ "'" + тип +"',"
		+ "'" + основание +"',"
		+ "'" + комментарий +"',"
		+ форматСуммы(сумма) + ")"
		;
		Command.CommandType = 1;
		Command.ActiveConnection = Connection;
		Command.Execute();  
    Исключение
        Сообщить(ОписаниеОшибки());
    КонецПопытки;
КонецПроцедуры

Функция получитьПоследнююДатуКассыSQLite()
	Возврат получитьПоследнююДатуSQLite("SELECT date FROM cash_last_update");		
КонецФункции

///////// СЕКЦИЯ ПРОДАЖ /////////
Процедура ЗаписатьПродажи(Начало) 
	конец = КонецДня(ТекущаяДата());
	выборка = Документы.ОтчетОРозничныхПродажах.Выбрать(Начало,Конец);
	
	Пока выборка.Следующий() Цикл
		идПродажи = ЗаписатьПродажиSQLite(выборка.Дата, выборка.КассаККМ, выборка.Ссылка, выборка.СуммаВозвратов, выборка.СуммаДокумента, выборка.Номер);
		Для Каждого товар из выборка.Товары Цикл 
			ЗаписатьПродажиТоваровSQLite(идПродажи, товар.Номенклатура, товар.ХарактеристикаНоменклатуры, товар.Количество, товар.Цена, товар.Сумма, товар.ПроцентАвтоматическихСкидок, товар.ЗначениеУсловияАвтоматическойСкидки, товар.ПроцентСкидкиНаценки, товар.Продавец, товар.ДисконтнаяКарта);
		КонецЦикла;
		Сообщить(выборка);
	КонецЦикла;

КонецПроцедуры

Функция ЗаписатьПродажиSQLite(дата, касса, имя, суммаВозврата, суммаПродажи, номер)
	Попытка
        Connection = SQLiteInit();
		Command = Новый COMОбъект("ADODB.Command");
		Command.CommandTimeout = 100;
		Command.CommandText = "INSERT INTO sells(date, cash, name, return_sum, doc_sum, number) VALUES ("
		+ "'" + форматДаты(дата) +"',"
		+ "'" + касса +"',"
		+ "'" + имя +"',"
		+ форматСуммы(суммаВозврата) +","
		+ форматСуммы(суммаПродажи) +","
		+ номер + ")"
		;
		Command.CommandType = 1;
		Command.ActiveConnection = Connection;
		Command.Execute(); 
		Возврат getSellsInsertID(); 
    Исключение
        Сообщить(ОписаниеОшибки());
    КонецПопытки;
КонецФункции

Процедура ЗаписатьПродажиТоваровSQLite(идПродаж, номенклатура, характеристика, количество, цена, сумма, процентАвтоСкидки, условиеАвтоСкидки, процентСкидки, продавец, скидочнаяКарта)
	Попытка
		родитель = номенклатура.Родитель;
		додатково = "нет";
		Пока СтрДлина(родитель.Наименование) > 0 Цикл
			Если Найти(родитель.Наименование, "Додатково") > 0 Тогда 
				додатково = "да";
			КонецЕсли;
			родитель = родитель.Родитель;
         КонецЦикла;
		
        Connection = SQLiteInit();
		Command = Новый COMОбъект("ADODB.Command");
		Command.CommandTimeout = 100;
		Command.CommandText = "INSERT INTO goods(sells_id, nomenclature, characteristic, parent, amount, price, sum, percent_auto_discount, condition_auto_discount, percent_discount, seller, discount_card) VALUES ("
		+ идПродаж + ","
		+ "'" + номенклатура + "',"
		+ "'" + характеристика + "',"
		+ "'" + додатково + "',"
		+ количество + ","
		+ форматСуммы(цена) + ","
		+ форматСуммы(сумма) + ","
		+ процентАвтоСкидки + ","
		+ "'" + условиеАвтоСкидки +"',"
		+ форматСуммы(процентСкидки) + ","
		+ "'" + продавец +"',"
		+ "'" + скидочнаяКарта +"')"
		;
		Command.CommandType = 1;
		Command.ActiveConnection = Connection;
		Command.Execute();  
    Исключение
        Сообщить(ОписаниеОшибки());
    КонецПопытки;
КонецПроцедуры

Функция getSellsInsertID()
	Попытка
	 	rs = NEW COMObject("ADODB.Recordset");
	 	rs.Open("SELECT last_insert_rowid() FROM sells", Connection);
		Возврат rs.Fields(0).Value;
	Исключение
	 	Сообщить(ОписаниеОшибки());
	 	Возврат -1;
	КонецПопытки	
КонецФункции

Функция получитьПоследнююДатуПродажSQLite()
	Возврат получитьПоследнююДатуSQLite("SELECT date FROM sells_last_update");		
КонецФункции	

//////// УТИЛИТЫ ///////////
Функция получитьПоследнююДатуSQLite(запрос)
	Попытка
		rs = NEW COMObject("ADODB.Recordset");
	 	rs.Open(запрос, Connection);
		Возврат Дата(rs.Fields(0).Value) + 1; //прибавляем 1с чтобы была новая дата
	Исключение
	 	Возврат Дата(2014, 3, 29);
	КонецПопытки		
КонецФункции

Функция форматСуммы(Сумма)
	Возврат Строка(?(Сумма = 0,"0",Формат(Сумма,"ЧРД=.; ЧГ=; ЧО=")));
КонецФункции

Функция форматДаты(Дата)
	Возврат Формат(Дата, "ДФ=yyyyMMddHHmmss");
КонецФункции	

Функция SQLiteInit()
	Если Connection = Неопределено Тогда
		файлБД = "D:\work\Test\test.sqlite";
	    Connection = Новый COMОбъект("ADODB.Connection");
	    SQLiteConnectionString = "DSN=SQLite3 Datasource;Database=" + файлБД + ";";
	    Connection.Open(SQLiteConnectionString);
	КонецЕсли;
    Возврат Connection;
КонецФункции